fs = 48000;           % sampling freq (Hz)
fc = 5000;            % cutoff (Hz)
N = 63;               % filter order (must be even/odd as you want)
wn = fc/(fs/2);       % normalized cutoff
% Design - Hamming windowed FIR
b = fir1(N, wn, hamming(N+1));   % b has length N+1
% Create a sample input (example: sum of two sines)
t = (0:1/fs:0.01)';            % 10 ms of data
x = 0.7*sin(2*pi*1000*t) + 0.3*sin(2*pi*12000*t);
% Write coefficients header
fid = fopen('fir_coeffs.h','w');
fprintf(fid, '// fir_coeffs.h generated by fir_generate.m\n');
fprintf(fid, '#ifndef FIR_COEFFS_H\n#define FIR_COEFFS_H\n\n');
fprintf(fid, 'const int FIR_LEN = %d;\n', length(b));
fprintf(fid, 'const float fir_b[%d] = {', length(b));
for k = 1:length(b)
    if k < length(b), fprintf(fid, '%1.12ff, ', b(k));
    else fprintf(fid, '%1.12ff};\n\n', b(k));
    end
end
fprintf(fid, '#endif // FIR_COEFFS_H\n');
fclose(fid);
% Write input data header
fid = fopen('input_data.h','w');
fprintf(fid, '// input_data.h generated by fir_generate.m\n');
fprintf(fid, '#ifndef INPUT_DATA_H\n#define INPUT_DATA_H\n\n');
L = length(x);
fprintf(fid, 'const int INPUT_LEN = %d;\n', L);
fprintf(fid, 'const float input_data[%d] = {', L);
for k = 1:L
    if k < L, fprintf(fid, '%1.8ff, ', x(k));
    else fprintf(fid, '%1.8ff};\n\n', x(k));
    end
end
fprintf(fid, '#endif // INPUT_DATA_H\n');
fclose(fid);
% Also create an empty placeholder for output (MATLAB will read output.txt after CCS runs)
disp('Headers written: fir_coeffs.h and input_data.h');
disp('Now copy these into your CCS project and build/run the CCS program.');

%alternate code
fs = 8000;            % Sampling frequency
fc = 1000;            % Cutoff frequency
N = 15;               % Filter order
% Design FIR lowpass filter
b = fir1(N, fc/(fs/2));
% Example input: sum of two sines
n = 0:99;
x = sin(2*pi*200*n/fs) + sin(2*pi*1500*n/fs);
% Write coefficients to fir_coeffs.h
fid = fopen('fir_coeffs.h','w');
fprintf(fid, '#define FIR_LEN %d\n', length(b));
fprintf(fid, 'float fir_b[FIR_LEN] = {');
fprintf(fid, '%f, ', b(1:end-1));
fprintf(fid, '%f};\n', b(end));
fclose(fid);
% Write input to input_data.h
fid = fopen('input_data.h','w');
fprintf(fid, '#define INPUT_LEN %d\n', length(x));
fprintf(fid, 'float input_data[INPUT_LEN] = {');
fprintf(fid, '%f, ', x(1:end-1));
fprintf(fid, '%f};\n', x(end));
fclose(fid);
disp('Generated fir_coeffs.h and input_data.h');
